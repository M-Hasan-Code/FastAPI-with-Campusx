import pickle
import pandas as pd
from fastapi.responses import JSONResponse

with open('model/lr.pkl', 'rb') as f:
    model = pickle.load(f)

MODEL_VERSION = '1.0.0'
class_labels = model.classes_.tolist()

DEFAULT_THRESHOLD = 0.245  # default threshold value

def predict_output(user_input: pd.DataFrame, threshold: float = DEFAULT_THRESHOLD):
    probas = model.predict_proba(user_input)[0]
    class_proba_dict = dict(zip(class_labels, probas))
    
    # Apply threshold for binary classification
    if len(class_labels) == 2:
        positive_proba = probas[1]
        if positive_proba >= threshold:
            predict_class = class_labels[1]
            max_proba = positive_proba
        else:
            predict_class = class_labels[0]
            max_proba = probas[0]
    else:
        # For multi-class, fallback to highest probability
        max_index = probas.argmax()
        max_proba = probas[max_index]
        predict_class = class_labels[max_index]

    return JSONResponse(status_code=200, content={
        'predicted_category': predict_class,
        'max_probability': round(float(max_proba), 4),
        'probabilities': class_proba_dict,
        'threshold_used': threshold
    })


{
  "city_development_index": 0.624,
  "gender": "Male",
  "relevent_experience": "Has relevent experience",
  "enrolled_university": "no_enrollment",
  "education_level": "Graduate",
  "major_discipline": "STEM",
  "experience": 2,
  "company_size": "<10",
  "company_type": "Pvt Ltd",
  "last_new_job": 2,
  "training_hours": 2
}